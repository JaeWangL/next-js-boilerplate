{
  "compilerOptions": {
    "target": "es5",
    "module": "esnext",
    "jsx": "preserve",
    "noEmit": true,
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "strict": true,
    "allowJs": true,
    "esModuleInterop": true,
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "noImplicitAny": false,
    "baseUrl": ".",
    // Added by Emotion 11, necessary to use the "css" props using the "Babel preset", without using JSX pragma.
    // Using the Babel preset is better (DX), because we don't have to use "/** @jsx jsx */" in every file, as Babel does it for us.
    // See https://emotion.sh/docs/typescript#css-prop TS configuration to support the "css" prop
    // See https://emotion.sh/docs/emotion-11#typescript Migration guide about Emotion 11 for TS
    // See https://emotion.sh/docs/css-prop#babel-preset Babel preset vs JSX pragma configuration
    // See https://github.com/emotion-js/emotion/issues/1606#issuecomment-757930872 Issue explanation when migrating from Emotion 10 to 11
    // See https://github.com/UnlyEd/next-right-now/pull/247 Emotion v10 > v11 migration pull request
    "jsxImportSource": "@emotion/react",
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "incremental": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules",
    ".next",
    "dist"
  ]
}
